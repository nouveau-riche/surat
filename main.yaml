name: FastAPI CI/CD

on: 
  # Trigger the workflow on push
  push:
    branches:
      # Push events on main branch
      - main

# The job defines a series  of steps that executes on the same runner.
jobs:

    CI: 
      # Define the runner used in the workflow 
      runs-on: ubuntu-latest
      steps: 
        # Check out repo so our workflow can access it 
        - uses: actions/checkout@v2

        # Step-1 Setup Python 
        - name: Set up Python
        # This action sets up a Python environment for use in actions
          uses: actions/setup-python@v2
          with:
            python-version: 3.11.6
            # optional: architecture: x64 or x86. Defaults to x64 if not specified

        # Step-2 Install Python virtual ENV
        - name: Install Python Virtual ENV
          run: pip3 install virtualenv

        # Step-3 Setup Virtual ENV
        - name: Virtual ENV
          uses: actions/cache@v2
          id: cache-venv # name for referring later
          with: 
            path: venv # what we cache: the Virtual ENV
            # The cache key depends on requirment.txt
            key: ${{ runner.os }}-venv-${{ hashfiles('**/requirements*.txt') }}
            restore-keys: /
              ${{ runner.os }}-venv-


        # Step-4 Build a virtual ENV, but only if it is not present
        - name: Activate Virtual ENV
          run: python -m venv venv && source venv/bin/activate && pip install -r requirements.txt  
          if: steps.cache-venv.outputs.cache-hit != 'true'    

        - name: Run Tests  
          # Note that you have to activate the virtualenv in every step
          # because Github actions doesn't preserve the environment
          run: . venv/bin/activate && pytest
        - name: Create archive of dependencies
          run: /
            cd ./venv/lib/python3.11.6/site-packages
            zip -r9 ../../../../api.zip .
        - name: Add API files to Zip file
          run: cd ./api && zip -g ../api.zip -r .
        - name: Upload zip file artifact
          # uploads artifcats  from your workflow alowing you to share data between jobs
          # Stores data once a workflow is complete  
          uses: actions/upload-artifacts@v2      
          with: 
            name: api
            path: api.zip



